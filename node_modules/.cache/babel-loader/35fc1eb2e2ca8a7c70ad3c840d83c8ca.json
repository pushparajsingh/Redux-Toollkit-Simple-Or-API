{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"; // const initialState = {\n//   value: 0,\n//   data: [],\n// };\n\nexport const getApi = createAsyncThunk(\"posts/getPost\", async () => {\n  return fetch(\"https://629dae743dda090f3c07dd7f.mockapi.io/test\").then(item => item.json()).then(result => result).catch(error => error);\n});\nexport const Delete = createAsyncThunk(\"posts/deletePost\", async id => {\n  return fetch(`https://629dae743dda090f3c07dd7f.mockapi.io/test/${id}`, {\n    method: \"DELETE\"\n  }).then(item => item.json()).then(result => result).catch(error => console.log(error));\n});\nexport const Update = (id, UpdateData) => {\n  console.log(id, updateDate);\n}; // export const Update = createAsyncThunk(\n//   \"posts/updatePost\",\n//   async (id, ChangeData) => {\n//     {\n//       console.log(333, id, ChangeData);\n//       return fetch(`https://629dae743dda090f3c07dd7f.mockapi.io/test/${id}`, {\n//         method: \"POST\",\n//       })\n//         .then((item) => item.json())\n//         .then((result) => result)\n//         .catch((error) => console.log(error));\n//     }\n//   }\n// );\n\n_c = Update;\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    value: 0,\n    data: [],\n    error: null,\n    del: \"\"\n  },\n  loading: false,\n  reducers: {\n    increment: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  },\n  extraReducers: {\n    [getApi.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [getApi.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    },\n    [getApi.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    [Delete.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [Delete.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.delete = action.payload;\n    },\n    [Delete.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport default counterSlice.reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["createAsyncThunk","createSlice","getApi","fetch","then","item","json","result","catch","error","Delete","id","method","console","log","Update","UpdateData","updateDate","counterSlice","name","initialState","value","data","del","loading","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","pending","fulfilled","rejected","delete","actions","reducer"],"sources":["/home/pushparajsigh/Desktop/practice/redux-toolkit by pushparaj/src/features/counter/counterSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\n// const initialState = {\n//   value: 0,\n//   data: [],\n// };\nexport const getApi = createAsyncThunk(\"posts/getPost\", async () => {\n  return fetch(\"https://629dae743dda090f3c07dd7f.mockapi.io/test\")\n    .then((item) => item.json())\n    .then((result) => result)\n    .catch((error) => error);\n});\n\nexport const Delete = createAsyncThunk(\"posts/deletePost\", async (id) => {\n  return fetch(`https://629dae743dda090f3c07dd7f.mockapi.io/test/${id}`, {\n    method: \"DELETE\",\n  })\n    .then((item) => item.json())\n    .then((result) => result)\n    .catch((error) => console.log(error));\n});\n\nexport const Update = (id,UpdateData) =>{\nconsole.log(id,updateDate)\n}\n// export const Update = createAsyncThunk(\n//   \"posts/updatePost\",\n//   async (id, ChangeData) => {\n//     {\n//       console.log(333, id, ChangeData);\n//       return fetch(`https://629dae743dda090f3c07dd7f.mockapi.io/test/${id}`, {\n//         method: \"POST\",\n//       })\n//         .then((item) => item.json())\n//         .then((result) => result)\n//         .catch((error) => console.log(error));\n//     }\n//   }\n// );\n\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    value: 0,\n    data: [],\n    error: null,\n    del: \"\",\n  },\n  loading: false,\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  extraReducers: {\n    [getApi.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [getApi.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    },\n    [getApi.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    [Delete.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [Delete.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.delete = action.payload;\n    },\n    [Delete.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\nexport default counterSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}